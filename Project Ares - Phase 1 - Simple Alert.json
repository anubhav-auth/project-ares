{
  "name": "Project Ares - Phase 1 - Simple Alert",
  "nodes": [
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "http://analytics-service:8080/api/applications",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$json}}"
      },
      "name": "Log 'NOTIFIED'",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        688,
        16
      ],
      "id": "c989e58d-1c98-4862-9b5e-2c78a0c5b9af"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://webhook.site/9df60bf9-f426-4939-b443-1f1350d4bc24",
        "responseFormat": "string",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$json}}"
      },
      "name": "Send Simple Alert",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        912,
        16
      ],
      "id": "0760af0f-cd1b-4988-abf5-d82716cd0549"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -208,
        16
      ],
      "id": "2cb38736-874e-46f5-929d-1f6b2483a2cf",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "https://www.foundit.in/search/software-engineer-jobs-in-pune",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        16,
        16
      ],
      "id": "3a3900ef-212f-47b8-a172-e2c5df01d4f0",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "// Get the HTML content from the previous node\nconst html = $input.all()[0].json.data;\n\n// This regex finds ALL script tags containing JSON-LD data\nconst regex = /<script type=\"application\\/ld\\+json\">(.*?)<\\/script>/gs;\n\n// Find all matches in the HTML\nconst matches = [...html.matchAll(regex)];\n\n// Find the specific JSON block that is an \"ItemList\"\nconst itemListJsonString = matches\n  .map(match => match[1].trim()) // Get the content of each script tag\n  .find(jsonString => jsonString.includes('\"@type\": \"ItemList\"')); // Find the one with our jobs data\n\nif (itemListJsonString) {\n  try {\n    const jsonData = JSON.parse(itemListJsonString);\n    const jobListings = jsonData.itemListElement;\n\n    // Transform the data to match what our database expects\n    const formattedJobs = jobListings.map(job => {\n      // Find the company name from the image URL, or default it\n      const companyMatch = job.image.match(/logos\\/(.*?)\\/jdlogo\\.gif/);\n      const companyName = companyMatch ? companyMatch[1].replace(/_/g, ' ') : \"Unknown\";\n\n      return {\n        json: {\n          jobId: job.url.split('-').pop(),\n          jobTitle: job.name,\n          companyName: companyName,\n          jobUrl: job.url,\n          source: 'foundit.in'\n        }\n      };\n    });\n\n    return formattedJobs;\n  } catch (e) {\n    throw new Error(\"Failed to parse the ItemList JSON-LD data: \" + e.message);\n  }\n}\n\n// If no data is found, return an empty array\nreturn [];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        368,
        32
      ],
      "id": "ea137f1d-4e2c-41eb-9e47-162f3a670cf1",
      "name": "Code in JavaScript",
      "alwaysOutputData": true
    }
  ],
  "pinData": {},
  "connections": {
    "Log 'NOTIFIED'": {
      "main": [
        [
          {
            "node": "Send Simple Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Log 'NOTIFIED'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7f0561f8-78c1-4505-8741-5499e16a3663",
  "meta": {
    "instanceId": "5a1bc7bdbda79678da2361de6bc7c91cd90d534cd561a00733a95bb182b8c298"
  },
  "id": "IjF3poKKLcDvNq5S",
  "tags": []
}